swagger: '2.0'
info:
  version: 1.0.0
  title: Cheers beer catalog API specification
  description: |
  
      The API specification for Cheers beer server.
  
      Set of functionalities covered.
  
      TAGS         | Brief Description
      ------------ | -----------------------------
      catalog       | beer catalog endpoints
  
     
  
      
  
      <details>
        <summary> __Change List__ </summary>
        
        |Version | date       | area        | description |
        |--------|------------|-------------|----------------------------------------------------------------------- |
        |1.0.0   | 2022/01/22 | ALL         | initial beer catalog definition  |
        
     
    
      </details>
  
  
  termsOfService: http://swagger.io/terms/
  contact:
    name: Cheers
    email: gaizkabilbao@hotmail.com
host: localhost:8080
basePath: /cheers
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json; charset=UTF-8

securityDefinitions:
  BasicAuth:
    type: basic
    
tags:
  - name: catalog
    description: Beer catalog endpoints
    
definitions:
  
  Pageable:
    type: object
    description: Pagination pageable
    properties:
      sort: 
        type: object
        description: sort 
        $ref: '#/definitions/Sort'
      pageSize:
        type: integer
        format: int32
        description: the number of items to be returned.
      pageNumber:
        type: integer
        format: int32
        description: the page to be returned.
      offset:
        type: integer
        format: int32
        description: the offset to be taken according to the underlying page and page size.
      paged:
        type: boolean
        description: whether it is paged 
      unpaged:
        type: boolean
        description: whether it is unpaged 
          
    example:
      {
        "sort": {
            "sorted": false,
            "empty": true,
            "unsorted": true
        },
        "pageSize": 1,
        "pageNumber": 0,
        "offset": 0,
        "paged": true,
        "unpaged": false
      }
    
  Sort:
    type: object
    description: beers paginated response
    properties:
      sorted:
        type: boolean
        description: whether it is sorted 
      empty:
        type: boolean
        description: whether it is empty 
      unsorted:
        type: boolean
        description: whether it is empty 
    example:
      {
        "sorted": false,
        "empty": true,
        "unsorted": true
      }
    
    
  BeersPaginatedResponse:
    type: object
    description: beers paginated response
    properties:
      content: 
        type: array
        items:
          $ref: '#/definitions/Beer'
      pageable:
        type: object
        description: the Pageable that's been used to request the current Slice. 
        $ref: '#/definitions/Pageable'
      totalPages:
        type: integer
        format: int32
        description: the number of total pages.
      totalElements:
        type: integer
        format: int32
        description: the total amount of elements.
      last:
        type: boolean
        description: whether the current Slice is the last one.
      number:
        type: integer
        format: int32
        description: the number of the current Slice.
      size:
        type: integer
        format: int32
        description: the size of the Slice.
      numberOfElements:
        type: integer
        format: int32
        description: the number of elements currently on this Slice.
      sort:
        type: object
        description:  the sorting parameters for the Slice. 
        $ref: '#/definitions/Sort'
      first:
        type: boolean
        description: whether the current Slice is the first one.
      empty: 
        type: boolean
        description: whether the current Slice is the last one.
    example:
      {
          "content": [{
                  "id": 1,
                  "name": "Heineken",
                  "graduation": 5.5,
                  "type": "Pale Lager",
                  "description": "description Heineken",
                  "manufacturer": {
                      "id": 1,
                      "name": "Heineken",
                      "nationality": "Netherlands"
                  }
              }, {
                  "id": 2,
                  "name": "Estrella Damm",
                  "graduation": 4.7,
                  "type": "Lager",
                  "description": "description Estrella",
                  "manufacturer": {
                      "id": 2,
                      "name": "Damm Brewery",
                      "nationality": "Spain"
                  }
              }, {
                  "id": 3,
                  "name": "Guinness",
                  "graduation": 8.9,
                  "type": "Stout",
                  "description": "Guinness Brewery",
                  "manufacturer": {
                      "id": 3,
                      "name": "Guinness Brewery",
                      "nationality": "Ireland"
                  }
              }, {
                  "id": 4,
                  "name": "Paulaner",
                  "graduation": 6.1,
                  "type": "Witbier",
                  "description": "description Paulaner",
                  "manufacturer": {
                      "id": 4,
                      "name": "Paulaner brewery",
                      "nationality": "Germany"
                  }
              }
          ],
          "pageable": {
              "sort": {
                  "sorted": true,
                  "empty": false,
                  "unsorted": false
              },
              "pageSize": 10,
              "pageNumber": 0,
              "offset": 0,
              "paged": true,
              "unpaged": false
          },
          "totalPages": 1,
          "totalElements": 4,
          "last": true,
          "number": 0,
          "size": 10,
          "numberOfElements": 4,
          "sort": {
              "sorted": true,
              "empty": false,
              "unsorted": false
          },
          "first": true,
          "empty": false
      }
  
  Beer:
    type: object
    description: Beer data
    properties:
      id:
        type: integer
        format: int32
        description: identifier
      name:
        type: string
        description: beer name
      graduation:
        type: number
        format: double
        description: graduation
      type:
        type: string
        description: type of beer
      description:
        type: string
        description: beer description
      manufacturer: 
        type: object
        $ref: '#/definitions/Manufacturer'
          
    example:
      {
          "id": 1,
          "name": "Heineken",
          "graduation": 5.5,
          "type": "Lager",
          "description": "description Heineken",
          "manufacturer": {
            "id": 1,
            "name": "Heineken Co",
            "country": "Netherlands",
          }
      }
    
  AddBeerRequest:
    type: object
    description: Add Beer data
    properties:
      name:
        type: string
        description: beer name
      graduation:
        type: number
        format: double
        description: graduation
      type:
        type: string
        description: type of beer
      description:
        type: string
        description: beer description
      manufacturer: 
        type: object
        $ref: '#/definitions/Manufacturer'
          
    
    example:
      {
          "name": "Punk IPA",
          "graduation": 5.8,
          "type": "IPA",
          "description": "description Punk IPA",
          "manufacturerId": 1
      }
    
  UpdateBeerRequest:
    type: object
    description: Add Beer data
    properties:
      id:
        type: integer
        format: int32
        description: identifier
      name:
        type: string
        description: beer name
      graduation:
        type: number
        format: double
        description: graduation
      type:
        type: string
        description: type of beer
      description:
        type: string
        description: beer description
      manufacturerId: 
        type: integer
        format: int32
        description: manufacturer Id
          
    example:
      {
          "id": 5,
          "name": "Punk IPA",
          "graduation": 5.8,
          "type": "IPA",
          "description": "description Punk IPA UPDATED",
          "manufacturerId": 2
      }
  
  ManufacturersPaginatedResponse:
    type: object
    description: Manufacturers paginated response
    properties:
      content: 
        type: array
        items:
          $ref: '#/definitions/Manufacturer'
      pageable:
        type: object
        description: the Pageable that's been used to request the current Slice. 
        $ref: '#/definitions/Pageable'
      totalPages:
        type: integer
        format: int32
        description: the number of total pages.
      totalElements:
        type: integer
        format: int32
        description: the total amount of elements.
      last:
        type: boolean
        description: whether the current Slice is the last one.
      number:
        type: integer
        format: int32
        description: the number of the current Slice.
      size:
        type: integer
        format: int32
        description: the size of the Slice.
      numberOfElements:
        type: integer
        format: int32
        description: the number of elements currently on this Slice.
      sort:
        type: object
        description:  the sorting parameters for the Slice. 
        $ref: '#/definitions/Sort'
      first:
        type: boolean
        description: whether the current Slice is the first one.
      empty: 
        type: boolean
        description: whether the current Slice is the last one.
    
    example:
      {
          "content": [
              {
                  "id": 2,
                  "name": "Damm Brewery",
                  "nationality": "Spain"
              },
              {
                  "id": 5,
                  "name": "Brewdog",
                  "nationality": "Scotland"
              },
              {
                  "id": 1,
                  "name": "Heineken",
                  "nationality": "Netherlands"
              },
              {
                  "id": 3,
                  "name": "Guinness Brewery",
                  "nationality": "Ireland"
              },
              {
                  "id": 4,
                  "name": "Paulaner brewery",
                  "nationality": "Germany"
              }
          ],
          "pageable": {
              "sort": {
                  "sorted": true,
                  "empty": false,
                  "unsorted": false
              },
              "pageSize": 20,
              "pageNumber": 0,
              "offset": 0,
              "paged": true,
              "unpaged": false
          },
          "totalPages": 1,
          "totalElements": 5,
          "last": true,
          "number": 0,
          "size": 20,
          "numberOfElements": 5,
          "sort": {
              "sorted": true,
              "empty": false,
              "unsorted": false
          },
          "first": true,
          "empty": false
      }
    
  Manufacturer:
    type: object
    description: Manufacturer data
    properties:
      id:
        type: integer
        format: int32
        description: identifier
      name:
        type: string
        description: Manufacturer name
      country:
        type: string
        description: nationality
    
  AddManufacturerRequest:
    type: object
    description: Add manufacturer data
    properties:
      name:
        type: string
        description: Manufacturer name
      country:
        type: string
        description: country
    
    example:
      {
          "name": "Affligem Brewery",
          "nationality": "Belgium"
      }
    
  UpdateManufacturerRequest:
    type: object
    description: Add manufacturer data
    properties:
      id:
        type: integer
        format: int32
        description: identifier
      name:
        type: string
        description: Manufacturer name
      country:
        type: string
        description: country
    
    example:
      {
        "id": 1,
        "name": "Affligem Brewery UPDATED",
        "nationality": "Belgium"
      }
    

paths:
  
  
  /public/v1/catalogue/beers:
    get:
      operationId: getBeers
      summary: gets beers paginated
      description: |
        Returns catalog beers paginated
      tags:
        - catalog
      parameters:
        - name: page
          in: query
          description: page to obtain (start with 0)
          type: integer
          format: int32
          required: true
          minimum: 0
          default: 0
        - name: size
          in: query
          description: max elements on page (start with 1)
          type: integer
          format: int32
          required: true
          minimum: 0
          default: 10
        - name: sort
          in: query
          type: string
          required: false
          description: sorting column and direction
          default: id,asc
        - name: search 
          in: query   
          description: search value field
          type: string
          default:
          required: false     
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BeersPaginatedResponse'
        default:
          description: error
          schema:
            type: string
                
    
  /public/v1/catalogue/beer/{id}:
    get:
      operationId: getBeer
      summary: get specific beer
      description: |
        Returns catalog specific beer
      tags:
        - catalog
      parameters:
        - name: id
          in: path
          description: id of the beer to get
          type: integer
          format: int32
          required: true
          minimum: 0  
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Beer'
        default:
          description: error
          schema:
            type: string
                
      
  /public/v1/catalogue/beer:
    post:
      operationId: addBeer
      summary: add specific beer
      description: |
        Add a beer to the catalog
      tags:
        - catalog
      parameters:
        - in: body
          name: beer
          description: beer object
          required: true
          schema:
            $ref: '#/definitions/AddBeerRequest'  
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Beer'
        default:
          description: error
          schema:
            type: string
            
                    
    put:
      operationId: updateBeer
      summary: update specific beer
      description: |
        Update a beer in the catalog
      tags:
        - catalog
      parameters:
        - in: body
          name: beer
          description: beer object
          required: true
          schema:
            $ref: '#/definitions/UpdateBeerRequest'   
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Beer'
        default:
          description: error
          schema:
            type: string
    
    delete:
      operationId: deleteBeer
      summary: delete specific beer
      description: |
        Delete a beer in the catalog
      tags:
        - catalog
      parameters:
        - in: query
          name: id
          description: beer id to delete
          type: integer
          format: int32
          required: true 
      responses:
        200:
          description: OK
        default:
          description: error
          schema:
            type: string           
  
  /public/v1/catalogue/manufacturers:
    get:
      operationId: getManufacturers
      summary: gets manufacturers paginated
      description: |
        Returns beer manufacturers paginated
      tags:
        - catalog
      parameters:
        - name: page
          in: query
          description: page to obtain (start with 0)
          type: integer
          format: int32
          required: true
          minimum: 0
          default: 0
        - name: size
          in: query
          description: max elements on page (start with 1)
          type: integer
          format: int32
          required: true
          minimum: 0
          default: 10
        - name: sort
          in: query
          type: string
          required: false
          description: sorting column and direction
          default: id      
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ManufacturersPaginatedResponse'
        default:
          description: error
          schema:
            type: string
                
    
  /public/v1/catalogue/manufacturer/{id}:
    get:
      operationId: getManufacturer
      summary: get specific manufacturer
      description: |
        Returns manufacturer
      tags:
        - catalog
      parameters:
        - name: id
          in: path
          description: id of the manufacturer to get
          type: integer
          format: int32
          required: true
          minimum: 0  
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Manufacturer'
        default:
          description: error
          schema:
            type: string
                
    
  /public/v1/catalogue/manufacturer:
    post:
      operationId: addManufacturer
      summary: add specific manufacturer
      description: |
        Add a manufacturer to the catalog
      tags:
        - catalog
      parameters:
        - in: body
          name: manufacturer
          description: manufacturer object
          required: true
          schema:
            $ref: '#/definitions/AddManufacturerRequest'  
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Manufacturer'
        default:
          description: error
          schema:
            type: string
            
                    
    put:
      operationId: updateManufacturer
      summary: update specific manufacturer
      description: |
        Update a manufacturer in the catalog
      tags:
        - catalog
      parameters:
        - in: body
          name: manufacturer
          description: Manufacturer object
          required: true
          schema:
            $ref: '#/definitions/UpdateManufacturerRequest'  
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Manufacturer'
        default:
          description: error
          schema:
            type: string
    
    delete:
      operationId: deleteManufacturer
      summary: delete specific manufacturer
      description: |
        Delete a manufacturer in the catalog
      tags:
        - catalog
      parameters:
        - in: query
          name: id
          description: manufacturer id to delete
          type: integer
          format: int32
          required: true 
      responses:
        200:
          description: OK
        default:
          description: error
          schema:
            type: string           
   
